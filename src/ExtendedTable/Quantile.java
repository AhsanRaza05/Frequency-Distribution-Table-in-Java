/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ExtendedTable;

import java.awt.HeadlessException;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.*;
import java.awt.*;
import java.math.*;

/**
 *
 * @author Ahsan
 */
public class Quantile extends javax.swing.JFrame {

    /**
     * Creates new form Quantile
     */
    public Quantile() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 30)); // NOI18N
        jLabel6.setText("Quantile");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Select Quantile Type");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Quantile No.");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jButton1.setText("Compute");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, 0, 103, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addGap(11, 11, 11)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowHeight(30);
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("jLabel1");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel4.setText("Mean");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel5.setText("Mean");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(187, 187, 187))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String type = jComboBox1.getSelectedItem().toString();
        String value = jTextField1.getText().trim();
        Integer val;
        BigDecimal per[];
        
        if(type.equalsIgnoreCase("-Select-")){
            
            JOptionPane.showMessageDialog(this,"Please enter a type of Qunatile");
            
            jComboBox1.showPopup();
        }
        
        else if(value.isEmpty()){
            
            JOptionPane.showMessageDialog(this,"Please enter value");
        }
        
        else{
            if(type.equalsIgnoreCase("Quartile")){
                
                val = Integer.parseInt(value);
            
                if(val < 1 || val > 3){
                    JOptionPane.showMessageDialog(this,"Quartile can be from only 1 to 3");
                }
                else{
                    defineData(val, 4);
                    per = computePercentile(val, 4);
                    
                    try{
                        jLabel4.setText("Where li = %s, (\u03A3F)1 = %s, C = %s, F = %s".formatted( (limits[0][per[2].intValue()] - 0.5) ,per[4], per[5], per[6]));   
                    
                        jLabel5.setText("Result = %f".formatted(per[0]));
                        jLabel4.setVisible(true);
                        jLabel3.setVisible(true);
                        jLabel5.setVisible(true);
                    }
                    catch(Exception e){};
                    
                }
            }
            
            else if(type.equalsIgnoreCase("Percentile")){
                
                val = Integer.parseInt(value);
            
                if(val < 1 || val > 99){
                    JOptionPane.showMessageDialog(this,"Percentile can be from only 1 to 99");
                }
                else{
                    defineData(val, 100);
                    per = computePercentile(val, 100);
                    
                    try{
                        jLabel4.setText("Where li = %s, (\u03A3F)1 = %s, C = %s, F = %s".formatted( (limits[0][per[2].intValue()] - 0.5) ,per[4], per[5], per[6]));   
                    
                        jLabel5.setText("Result = %f".formatted(per[0]));
                        
                        jLabel4.setVisible(true);
                        jLabel3.setVisible(true);
                        jLabel5.setVisible(true);
                    }
                    catch(Exception e){};
                }
            }
            else{
                 val = Integer.parseInt(value);
            
                if(val < 1 || val > 9){
                    JOptionPane.showMessageDialog(this,"Decile can be only from 1 to 9");
                }
                else{
                    defineData(val, 10);
                    per = computePercentile(val, 10);
                    
                    try{
                        jLabel4.setText("Where li = %s, (\u03A3F)1 = %s, C = %s, F = %s".formatted( (limits[0][per[2].intValue()] - 0.5) ,per[4], per[5], per[6]));   
                    
                        jLabel5.setText("Result = %f".formatted(per[0]));
                        jLabel4.setVisible(true);
                        jLabel3.setVisible(true);
                        jLabel5.setVisible(true);
                    }
                    catch(Exception e){};
                }
            }
        }
        
        ///jTable1.setPreferredSize(new Dimension(0, 300));
        //jTable1.setSize(new Dimension(200, 500));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quantile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quantile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quantile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quantile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quantile().setVisible(true);
            }
        });
    }
//******************************MY CODE***********************
    
    Double limits[][];
    Integer frequency[];
    Integer commulativeFrequency[];
    String []column;
    Object data[][];
    
    Quantile(Double[][] limits, Integer[] frequency, Integer commulativeFrequency[]){
        
        this();
        
        setResizable(false);
        
        jLabel4.setVisible(false);
        jLabel3.setVisible(false);
        jLabel5.setVisible(false);
        
        setDefaultCloseOperation(HIDE_ON_CLOSE);
        
        this.limits = limits;
        this.frequency = frequency;
        this.commulativeFrequency = commulativeFrequency;
        
        jComboBox1.addItem("-Select-");
        jComboBox1.addItem("Quartile");
        jComboBox1.addItem("Decile");
        jComboBox1.addItem("Percentile");
        
       /* data = new String[frequency.length ][4];

		for (int i = 0; i < frequency.length; i++) {

			data[i][0] = limits[0][i] + "-" + limits[1][i];
			data[i][1] = "" + frequency[i];
                        data[i][2] = "" + commulativeFrequency[i];
                        
                        if(median[3].compareTo(new BigDecimal(commulativeFrequency[i] + "")) == 1){
                            data[i][3] = commulativeFrequency[i] + " < " + median[3];
                        }
                        else{
                             data[i][3] = commulativeFrequency[i] + " > " + median[3];
                        }
                }
               // dat[x.length - 1][dat.length] = x[x.length - 1];
                 
		column = new String[]{ "Class Intevals", "Frequency F","Cummulative Frequency CF", "N / 2 = " + median[3]};
                jTable1.setModel(new javax.swing.table.DefaultTableModel(data,column)) ;
                
                */
                //ImageIcon i  = new ImageIcon("C:/Users/Ahsan/Documents/NetBeansProjects/Final SP/Per.png");
                ImageIcon i  = new ImageIcon(System.getProperty("user.dir") + "/Per.png");
                
                jLabel3.setText("");
                jLabel3.setIcon(i);
                
                column = new String[]{ "Class Intevals", "Frequency F","Cummulative Frequency CF", "i * N / x = " };
                jTable1.setModel(new javax.swing.table.DefaultTableModel(new Object[][]{},column)) ;
    }
    
    	BigDecimal[] computePercentile(int k,int x) {

		int medianClassindex = -1;
		Double sizeOfMedianClass;
		BigDecimal median[] = new BigDecimal[7];

		Double N_I_X = commulativeFrequency[commulativeFrequency.length - 1] * (double)k;
                //System.out.println("N_I_X = " + N_I_X);
                N_I_X = N_I_X / x;
                //System.out.println("N_I_X = " + N_I_X);

		for (int i = 0; i < commulativeFrequency.length; i++)

			if (commulativeFrequency[i] >= N_I_X) {

				medianClassindex = i;
                                //System.out.println("I = " + i);
                                //System.out.println("N_I_X = " + N_I_X);
                                //System.out.println("Median Class = " + medianClassindex);
				break;
			}

		if (medianClassindex == -1 || medianClassindex == 0) {

			//System.out.println("\nCan not find Median Class. Please check your entered data.");
                        
                        jLabel3.setVisible(false);
                        jLabel4.setVisible(false);
                        jLabel5.setVisible(false);
                        
                        JOptionPane.showMessageDialog(this,"Median can not be computed");
                        
                        return new BigDecimal[0];
			//System.exit(0);
                }
                System.out.println("Median Class = " + medianClassindex);
		sizeOfMedianClass = (limits[1][medianClassindex] + 0.5) - (limits[0][medianClassindex] - 0.5);

		median[2] = new BigDecimal(medianClassindex);
		
                median[0] = new BigDecimal(N_I_X.toString())
				.subtract(new BigDecimal(commulativeFrequency[medianClassindex - 1]));
		
                median[0] = median[0].multiply(new BigDecimal(sizeOfMedianClass.toString()));

		median[0] = median[0].divide(new BigDecimal(frequency[medianClassindex]), 4, RoundingMode.CEILING);

		median[1] = median[0];
                
		median[0] = median[0].add(new BigDecimal ((limits[0][medianClassindex] - 0.5)));

		median[1] = median[1].add(new BigDecimal(limits[0][medianClassindex]));
                
                median[3] = new BigDecimal(N_I_X + "");
                median[4] = new BigDecimal(commulativeFrequency[medianClassindex - 1] + "");
                median[5] = new BigDecimal(sizeOfMedianClass.toString());
                median[6] = new BigDecimal(frequency[medianClassindex]);

		
		return (median);
	}
    
    void defineData(Integer i, Integer x){
    
        data = new String[frequency.length ][4];
        //BigDecimal res = new BigDecimal((i * commulativeFrequency[commulativeFrequency.length - 1]);
        Double re = i * commulativeFrequency[commulativeFrequency.length - 1] / (double)x;
		
        for (int j = 0; j < frequency.length; j++) {

			data[j][0] = limits[0][j] + "-" + limits[1][j];
			data[j][1] = "" + frequency[j];
                        data[j][2] = "" + commulativeFrequency[j];
                        
                        if(commulativeFrequency[j] < re){
                            data[j][3] = commulativeFrequency[j] + " < " + re;
                        }
                        else{
                             data[j][3] = commulativeFrequency[j] + " > " + re;
                        }
                }
        
        column = new String[]{ "Class Intevals", "Frequency F","Cummulative Frequency CF", "%d * %d / %d = %f".formatted(i,commulativeFrequency[commulativeFrequency.length - 1],x,re) };
        jTable1.setModel(new javax.swing.table.DefaultTableModel(data,column)) ;
    }
//******************************MY CODE***********************
    
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
