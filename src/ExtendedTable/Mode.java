/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ExtendedTable;
import java.math.*;
import javax.swing.JFrame;

/**
 *
 * @author Ahsan
 */
public class Mode extends javax.swing.JFrame {

    /**
     * Creates new form Mode
     */
    public Mode() {
        initComponents();
        setResizable(false);
        String deltaSymbol = "\u03B4".toUpperCase();
        jLabel1.setText("Mode = l + ()");
        jLabel1.setText("Mode = l + ( " + (deltaSymbol) + " / ( " + (deltaSymbol) + "1" + " + " + (deltaSymbol) + "2) ) * C");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowHeight(25);
        jTable1.setShowGrid(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 30)); // NOI18N
        jLabel5.setText("Mode");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel2.setText("jLabel2");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("jLabel2");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setText("jLabel2");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(158, 158, 158))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mode().setVisible(true);
            }
        });
    }
//******************************* MY CODE ******************************
    
    Double limits[][];
    Integer Frequency[];
    
    Mode(Double limits[][], Integer Frequency[]){
        
        this();
        
        this.limits = limits;
        this.Frequency = Frequency;
        
        BigDecimal b[] = computeMode();
        
        String deltaSymbol = "\u03B4".toUpperCase();
       
        jLabel1.setText("MODE = l + ( " + (deltaSymbol) + " / ( " + (deltaSymbol) + "1" + " + " + (deltaSymbol) + "2) ) * C");
        
        jLabel2.setText("l = " + b[1] + ", " + deltaSymbol + " = " + b[2] + ", " + deltaSymbol + " =  " + b[3] + ", C = " + b[4]);
    
        jLabel3.setText("MODE = " + b[1] + " + ( " + b[2] + " / ( " + b[2] + " + " + b[3] + " ) ) * " + b[4] );
    
        jLabel4.setText(" MODE = " + b[0]);
        
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        
         // Initialize JTABLE
            
        String data[][] = new String[Frequency.length ][4];

		for (int i = 0; i < Frequency.length; i++) {

			data[i][0] = limits[0][i] + "-" + limits[1][i];
			data[i][1] = "" + Frequency[i];
                        data[i][2] = deltaSymbol + "1";
                        data[i][3] = deltaSymbol + "2";
                        
                        if(i == b[5].intValue()){
                            
                            data[i][2] = Frequency[b[5].intValue()] + " - " + Frequency[b[5].intValue() - 1]; 
                            
                            data[i][3] = Frequency[b[5].intValue()] + " - " + Frequency[b[5].intValue() + 1]; 
                        }
                        else{
                             data[i][3] = "";
                             data[i][2] = "";
                        }
                }
               // dat[x.length - 1][dat.length] = x[x.length - 1];
                 
		String column[] = new String[]{ "Class Intevals", "Frequency F", deltaSymbol + 1, deltaSymbol + 2};
                jTable1.setModel(new javax.swing.table.DefaultTableModel(data,column)) ;
    }
    
    BigDecimal[] computeMode() {

		Integer modalClassIndex = 0;
		Integer maxFrequency = Frequency[0];
		Integer delta1, delta2;
		Double lowerclassBoundaryOfModalClass, sizeOfModalClass;
		BigDecimal mode;

		for (int i = 1; i < Frequency.length; i++)

			if (maxFrequency < Frequency[i]) {
				maxFrequency = Frequency[i];
				modalClassIndex = i;
			}

		maxFrequency = null;

                //(limits[0][modalClassIndex] - 0.5)// It is lower Boundary
                //(limits[1][modalClassIndex] + 0.5)// It is Upper Boundary
                
		lowerclassBoundaryOfModalClass = (limits[0][modalClassIndex] - 0.5);
                
		sizeOfModalClass = (limits[1][modalClassIndex] + 0.5) - lowerclassBoundaryOfModalClass;

		if (modalClassIndex == 0)
			delta1 = Frequency[modalClassIndex];
		else
			delta1 = Frequency[modalClassIndex] - Frequency[modalClassIndex - 1];

		if (modalClassIndex == Frequency.length - 1)
			delta2 = Frequency[modalClassIndex];
		else
			delta2 = Frequency[modalClassIndex] - Frequency[modalClassIndex + 1];

		mode = new BigDecimal(delta1 + delta2);
		mode = new BigDecimal(delta1).divide(mode, 4, RoundingMode.CEILING);
		mode = mode.multiply(new BigDecimal(sizeOfModalClass));
		mode = mode.add(new BigDecimal(lowerclassBoundaryOfModalClass));
                
                BigDecimal x[] = new BigDecimal[6];
                x[0] = mode;
                x[1] = new BigDecimal(lowerclassBoundaryOfModalClass + "");
                x[2] = new BigDecimal(delta1 + "");
                x[3] = new BigDecimal(delta2 + "");
                x[4] = new BigDecimal(sizeOfModalClass + "");
                x[5] = new BigDecimal(modalClassIndex); 
                
		return (x);
	}
//******************************* MY CODE ******************************
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
